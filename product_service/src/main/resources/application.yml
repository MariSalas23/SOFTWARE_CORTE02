server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://${DATABASE_URL:localhost:3306/product_db}
    username: root
    password: pass
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
  application:
    name: product-service
  config:
    import: configserver:http://localhost:9296

  # Configuración de Zipkin para trazabilidad distribuida (Jaeger es compatible con Zipkin)
  zipkin:
    base-url: http://localhost:9411/api/v2/spans  # Cambia la URL si es necesario

  # Configuración de Spring Sleuth para rastreo distribuido (requiere Zipkin/Jaeger)
  sleuth:
    sampler:
      probability: 1.0  # 100% de las peticiones se muestrearán

  # Configuración para Prometheus (exponer métricas en /actuator/prometheus)
  metrics:
    export:
      prometheus:
        enabled: true  # Habilitar la exportación de métricas a Prometheus
        step: 30s      # Intervalo para las métricas

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus  # Exponer métricas de Prometheus en el endpoint /actuator/prometheus
  metrics:
    export:
      prometheus:
        enabled: true
        step: 30s

# Configuración de Eureka (si lo estás utilizando para registro de servicios)
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
